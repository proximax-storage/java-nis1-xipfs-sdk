///*
// * Proximax P2P Storage REST API
// * Proximax P2P Storage REST API
// *
// * OpenAPI spec version: v0.0.1
// * Contact: alvin.reyes@botmill.io
// *
// * NOTE: This class is auto generated by the swagger code generator program.
// * https://github.com/swagger-api/swagger-codegen.git
// * Do not edit the class manually.
// */
//
//
//package io.nem.xpx;
//
//import io.nem.ApiException;
//import io.nem.xpx.model.BinaryTransactionEncryptedMessage;
//import java.io.File;
//import org.junit.Test;
//import org.junit.Ignore;
//
//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
//
///**
// * API tests for UploadApi
// */
//@Ignore
//public class UploadApiTest {
//
//    private final UploadApi api = new UploadApi();
//
//    
//    /**
//     * Calls the garbage clean up and tries to unpin the given hash
//     *
//     * This endpoint can be used to generates the datahash and uploads the file in the process.
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void cleanupPinnedContentUsingPOSTTest() throws ApiException {
//        String multihash = null;
//        String response = api.cleanupPinnedContentUsingPOST(multihash);
//
//        // TODO: test validations
//    }
//    
//    /**
//     * Generates the encrypted datahash and uploads the JSON Format String data to the P2P Storage Network.
//     *
//     * This endpoint can be used to generates the encrypted datahash and uploads the file in the process.
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void generateHashAndExposeAsBlockToNetworkUsingPOSTTest() throws ApiException {
//        byte[] data = null;
//        String contentType = null;
//        String name = null;
//        String keywords = null;
//        String metadata = null;
//        BinaryTransactionEncryptedMessage response = api.generateHashAndExposeAsBlockToNetworkUsingPOST(data, contentType, name, keywords, metadata);
//
//        // TODO: test validations
//    }
//    
//    /**
//     * Generates the encrypted datahash and uploads the JSON Format String data to the P2P Storage Network.
//     *
//     * This endpoint can be used to generates the encrypted datahash and uploads the file in the process.
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void generateHashAndExposeAsObjectToNetworkUsingPOSTTest() throws ApiException {
//        byte[] data = null;
//        String contentType = null;
//        String name = null;
//        String keywords = null;
//        String metadata = null;
//        BinaryTransactionEncryptedMessage response = api.generateHashAndExposeAsObjectToNetworkUsingPOST(data, contentType, name, keywords, metadata);
//
//        // TODO: test validations
//    }
//    
//    /**
//     * Upload a data/blob to the IPFS/P2P Storage Network
//     *
//     * This endpoint can be used to generate the data that will be injected to the NEM Blockchain.
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void generateHashAndExposeByteArrayToNetworkUsingPOSTTest() throws ApiException {
//        byte[] data = null;
//        String contentType = null;
//        String name = null;
//        String keywords = null;
//        String metadata = null;
//        Object response = api.generateHashAndExposeByteArrayToNetworkUsingPOST(data, contentType, name, keywords, metadata);
//
//        // TODO: test validations
//    }
//    
//    /**
//     * Upload the File to the IPFS/P2P Storage Network
//     *
//     * This endpoint can be used to generate the data that will be injected to the NEM Blockchain.
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void generateHashAndExposeFileToNetworkUsingPOSTTest() throws ApiException {
//        File file = null;
//        String name = null;
//        String keywords = null;
//        String metadata = null;
//        Object response = api.generateHashAndExposeFileToNetworkUsingPOST(file, name, keywords, metadata);
//
//        // TODO: test validations
//    }
//    
//}
