/*
 * Copyright 2018 ProximaX Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.proximax.xpx.local;
/*
 * Proximax REST API
 * Proximax REST API
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import io.proximax.xpx.exceptions.ApiException;
import io.proximax.xpx.model.AccountMetaDataPair;
import io.proximax.xpx.remote.AbstractApiTest;
import io.proximax.xpx.service.remote.RemoteAccountApi;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

import static io.proximax.xpx.testsupport.Constants.TEST_PUBLIC_KEY;



/**
 * API tests for AccountApi.
 */
@Ignore
public class LocalAccountApiTest extends AbstractApiTest {

	/** The api. */
	private final RemoteAccountApi api = new RemoteAccountApi(apiClient);

	/**
	 * getAllIncomingNemAddressTransactions.
	 *
	 * @throws ApiException if the Api call fails
	 */
	@Test
	public void getAllIncomingNemAddressTransactionsUsingGETTest() throws ApiException {
		String publicKey = TEST_PUBLIC_KEY;
		String response = api.getAllIncomingNemAddressTransactionsUsingGET(publicKey);
		Assert.assertNotNull(response);

	}

	/**
	 * getAllNemAddressTransactions.
	 *
	 * @throws ApiException             if the Api call fails
	 */
	@Test
	public void getAllNemAddressTransactionsUsingGETTest() throws ApiException {
		String publicKey = TEST_PUBLIC_KEY;
		String response = api.getAllNemAddressTransactionsUsingGET(publicKey);

		Assert.assertNotNull(response);
	}

	/**
	 * getAllNemAddressTransactionsWithPageSize.
	 *
	 * @throws ApiException             if the Api call fails
	 */
	@Test
	public void getAllNemAddressTransactionsWithPageSizeUsingGETTest() throws ApiException {
		String publicKey = TEST_PUBLIC_KEY;
		String pageSize = "100";
		String response = api.getAllNemAddressTransactionsWithPageSizeUsingGET(publicKey, pageSize);
		
		Assert.assertNotNull(response);
	}

	/**
	 * getAllOutgoingNemAddressTransactions.
	 *
	 * @throws ApiException             if the Api call fails
	 */
	@Test
	public void getAllOutgoingNemAddressTransactionsUsingGETTest() throws ApiException {
		String publicKey = TEST_PUBLIC_KEY;
		String response = api.getAllOutgoingNemAddressTransactionsUsingGET(publicKey);

		Assert.assertNotNull(response);

	}

	/**
	 * Get the NEM Address Details
	 * 
	 * This endpoint returns the NEM Address/Account Information of a given
	 * address.
	 *
	 * @throws ApiException             if the Api call fails
	 */
	@Test
	public void getNemAddressDetailsUsingGETTest() throws ApiException {
		String publicKey = TEST_PUBLIC_KEY;
		AccountMetaDataPair response = api.getNemAddressDetailsUsingGET(publicKey);
		
		Assert.assertNotNull(response);
	}

}
